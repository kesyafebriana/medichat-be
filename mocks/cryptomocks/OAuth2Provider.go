// Code generated by mockery v2.10.4. DO NOT EDIT.

package cryptomocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	oauth2 "golang.org/x/oauth2"
)

// OAuth2Provider is an autogenerated mock type for the OAuth2Provider type
type OAuth2Provider struct {
	mock.Mock
}

// Exchange provides a mock function with given fields: ctx, code
func (_m *OAuth2Provider) Exchange(ctx context.Context, code string) (*oauth2.Token, error) {
	ret := _m.Called(ctx, code)

	var r0 *oauth2.Token
	if rf, ok := ret.Get(0).(func(context.Context, string) *oauth2.Token); ok {
		r0 = rf(ctx, code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oauth2.Token)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAuthURL provides a mock function with given fields: state
func (_m *OAuth2Provider) GetAuthURL(state string) string {
	ret := _m.Called(state)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(state)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
